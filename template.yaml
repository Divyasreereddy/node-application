---
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "test"
Mappings:
ResourceTags:
  tag1:
    key: 'suresh:babu:component'
    value: 'KMSKey.KMSKey.ads'
  tag2:
    key: 'suresh:babu:fp'
    value: Ref: AWS::NoValue
  tag3:
    key: 'suresh:babu:env'
    value: 'KMSKey.prd'
  tag4:
    key: 'suresh:babu:ID'
    value: Ref: AWS::NoValue

Parameters:
  RoleName:
    Type: String
    Default: "kannanasbdjs"
Resources:
  TestIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Ref RoleName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - '*'
                Resource: '*'
      Tags:
        - Key: !FindInMap [ ResourceTags, tag1, key]
          Value: !FindInMap [ ResourceTags, tag1, value]
        - Key: !FindInMap [ ResourceTags, tag2, key]
          Value: !FindInMap [ ResourceTags, tag2, value]
        - Key: !FindInMap [ ResourceTags, tag3, key]
          Value: !FindInMap [ ResourceTags, tag3, value]
        - Key: !FindInMap [ ResourceTags, tag4, key]
          Value: !FindInMap [ ResourceTags, tag4, value]
  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "test"
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Id: test-policy
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: kms:*
            Resource: "*"
      # 'Fn::Transform':
      #   Name: AWS::Include
      #   Parameters:
      #     Location: 's3://mybucket-765578585/tags.yaml'
      Tags:
        - Key: !FindInMap [ ResourceTags, tag1, key]
          Value: !FindInMap [ ResourceTags, tag1, value]
        - Key: !FindInMap [ ResourceTags, tag2, key]
          Value: !FindInMap [ ResourceTags, tag2, value]
        - Key: !FindInMap [ ResourceTags, tag3, key]
          Value: !FindInMap [ ResourceTags, tag3, value]
        - Key: !FindInMap [ ResourceTags, tag4, key]
          Value: !FindInMap [ ResourceTags, tag4, value]
  AliasS3:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/test-s3
      TargetKeyId: !Ref KMSKey

  TestBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref KMSKey
              SSEAlgorithm: "aws:kms"
      BucketName: bvjhsabvjhsbvhjsbvhj-63267476
      Tags:
        - Key: !FindInMap [ ResourceTags, tag1, key]
          Value: !FindInMap [ ResourceTags, tag1, value]
        - Key: !FindInMap [ ResourceTags, tag2, key]
          Value: !FindInMap [ ResourceTags, tag2, value]
        - Key: !FindInMap [ ResourceTags, tag3, key]
          Value: !FindInMap [ ResourceTags, tag3, value]
        - Key: !FindInMap [ ResourceTags, tag4, key]
          Value: !FindInMap [ ResourceTags, tag4, value]
  CloudFormationStackGroupForAnotherStack:
    Type: "AWS::ResourceGroups::Group"
    Properties:
      Name: "MyCloudFormationResourceGroupForAnotherStack"
      Description: "A group that is created via CFN"
      ResourceQuery:
        Type: "CLOUDFORMATION_STACK_1_0"
        Query:
          ResourceTypeFilters:
            - "AWS::AllSupported"
          StackIdentifier: "arn:aws:cloudformation:us-east-1:690046498336:stack/suresh-pipeline/db3a8160-a94a-11ea-bea2-12b44143da02"
      Tags:
        - Key: "Mot"
          Value: "Man"
